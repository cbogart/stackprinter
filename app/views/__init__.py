from web.template import CompiledTemplate, ForLoop, TemplateResult


# coding: utf-8
def about():
    __lineoffset__ = -5
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>About - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'         <div id="main_container">\n'])
    extend_([u'              <div class="logo">                           \n'])
    extend_([u'              </div>\n'])
    extend_([u'              <div class="header links">\n'])
    extend_([u'                  <a class="nolines" href="/">Home</a>|<a class="nolines" href="/myse">MySE</a>|<a class="nolines" href="/favorites">Favorites</a>|<a class="nolines" href="/topvoted">TopVoted</a>|<a class="nolines" href="/topprinted">TopPrinted</a>|<a class="nolines" href="/deleted">Deleted</a>|<span class="header_current">About</span>\n'])
    extend_([u'              </div>\n'])
    extend_([u'              <div class="about">\n'])
    extend_([u'                  <br/>\n'])
    extend_([u'                  <b>Printer-Friendly:</b><br/>\n'])
    extend_([u'                  Using the <a href="http://www.stackexchange.com/sites">Stack Exchange</a> Network <a href="http://stackapps.com/questions/1/api-documentation-and-help">API</a> produces an essential printable view of a given <i>question id</i> with:<br/>\n'])
    extend_([u'                  * All the answers<br/> \n'])
    extend_([u'                  * All the comments<br/>\n'])
    extend_([u'                  <br/>\n'])
    extend_([u'                  The easiest way to use this service is with:<br/>\n'])
    extend_([u'                  * <a href="http://userscripts-mirror.org/scripts/show/77298.html" >StackPrinter GreaseMonkey script</a><br/>\n'])
    extend_([u'                  * <a href="javascript:(function(){var re = new RegExp(\'^http://(.*?)\\.com/questions/([0-9]+)/\');var group = re.exec(window.location.href);if (group!=null){var service = group[1];var questionid=group[2];window.open(\'http://www.stackprinter.com/export?format=HTML&service=\'+service+\'&question=\'+questionid)}else{alert(\'Attention: question id not found!\')}})()">Bookmarklet</a><br/>\n'])
    extend_([u'                  <br/>\n'])
    extend_([u'                    <b>MySE:</b><br/>\n'])
    extend_([u'                    Retrieves and lets you print all your Stack Exchange stuff\n'])
    extend_([u'                    <br/>\n'])
    extend_([u'                  <br/>\n'])
    extend_([u'                  <b>Favorites:</b><br/>\n'])
    extend_([u"                  Retrieves and lets you print all the favorites users' questions<br/>\n"])
    extend_([u'                  <br/>\n'])
    extend_([u'                  <b>Top Voted:</b><br/>\n'])
    extend_([u'                  Retrieves and lets you print the top voted questions by tags<br/><br/>\n'])
    extend_([u'                  <b>Top Printed:</b><br/>\n'])
    extend_([u'                    Top voted questions list<br/><br/>\n'])
    extend_([u'                  <b>Deleted:</b><br/>\n'])
    extend_([u'                        Deleted questions list<br/><br/>\n'])
    extend_([u'                  <b>Info:</b><br/>\n'])
    extend_([u'                  <a target="_new" href="/docs/changelog.txt">Changelog</a>/<a target="_new" href="/docs/todo.txt">ToDo</a>/<a target="_new" href="http://stackapps.com/questions/179/stackprinter-the-stack-exchange-printer-suite">Stack Apps</a>/<a target="_new" href="/docs/api.txt">Api</a><br/>\n'])
    extend_([u'                  <a target="_new" href="http://github.com/systempuntoout/stackprinter"/>Source code on Github</a>/<a target="_new" href="/docs/privacy.txt">Privacy</a><br/>\n'])
    extend_([u'                  <img src="/images/systempuntooutmail.jpg"/><br/><br/>\n'])
    extend_([u'              </div>                                 \n'])
    extend_([u'          </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

about = CompiledTemplate(about, './about.html')
join_ = about._join; escape_ = about._escape

# coding: utf-8
def admin (result):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'         <div>\n'])
    extend_([u'             <p> STACKPRINTER ADMIN CONSOLE</p>\n'])
    extend_([u'             <ul>\n'])
    extend_([u'                 <li><a href="/admin?action=quota">API quota </a></li>\n'])
    extend_([u'                 <li><a href="/admin?action=quotaauth">API quota auth </a></li>\n'])
    extend_([u'                 <li><a href="/admin?action=authkey">API quota auth key </a></li>\n'])
    extend_([u'                 <li><a href="/admin?action=memcachestats">Memcache stats </a></li>\n'])
    extend_([u'                 <li><a href="/admin?action=memcacheflush">Memcache flush </a></li>\n'])
    extend_([u'                 <li><a href="/admin?action=normalize">Normalize </a></li>                 \n'])
    extend_([u'                 <li><a href="/admin/authtokenrenewal">Auth Token renewal </a></li>\n'])
    extend_([u'                 <li><form action = "/admin" method="POST">  \n'])
    extend_([u'                     <input type="hidden" name="action" value="delete"/>\n'])
    extend_([u'                     question_id:<input type="text" name="question_id"/>\n'])
    extend_([u'                     service :<input type="text" name="service"/>\n'])
    extend_([u'                     <input type="submit" value="Delete printed and cached Q/A"/>\n'])
    extend_([u'                   </form>\n'])
    extend_([u'                 </li>\n'])
    extend_([u'                 <li><a href="/admin/topquestionsretriever">Top Question Retriever</a></li>\n'])
    extend_([u'             </ul>       \n'])
    extend_([u'             \n'])
    extend_([u'             <p><b>Result:</b></p>\n'])
    for key in loop.setup(result.keys()):
        extend_(['             ', u'* ', escape_(("%s - %s" % (key, result[key])), True), u'<br>                        \n'])
    extend_([u'         </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

admin = CompiledTemplate(admin, './admin.html')
join_ = admin._join; escape_ = admin._escape

# coding: utf-8
def deleted (result):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Deleted - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/search.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery-ui.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-ui.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/main.js"></script>     \n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'             <div id="back">\n'])
    extend_([u'                    <a href="/"><img title="Back to home" width="20px" height="20px" border="0" src="/images/icon_home.png"/></a>\n'])
    extend_([u'                 </div>\n'])
    extend_([u'             <div id="title" class="main"><i>Deleted</i> questions</div>\n'])
    extend_([u'             <table cellpadding="2" cellspacing="0">\n'])
    extend_([u'                    <tr class="even">\n'])
    extend_([u'                            <td class="printer">\n'])
    extend_([u'                            <a target="_blank" href="/questions/what-is-your-solution-to-the-fizzbuzz-problem.html"/>\n'])
    extend_([u'                                <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
    extend_([u'                            </a>\n'])
    extend_([u'                        </td>\n'])
    extend_([u'                        <td class="service_logo">\n'])
    extend_([u'                            <a target="_blank" href="http://stackoverflow.com"><img src="http://sstatic.net/stackoverflow/img/apple-touch-icon.png"/></a>\n'])
    extend_([u'                        </td>\n'])
    extend_([u'                        <td class="service_name">\n'])
    extend_([u'                            [Stack Overflow]    \n'])
    extend_([u'                        </td>    \n'])
    extend_([u'                        <td class="title">\n'])
    extend_([u'                            <a target="_blank" href="http://stackoverflow.com/questions/437"/>What is your solution to the FizzBuzz problem?</a><br>\n'])
    extend_([u'                            <span class="tag">\n'])
    extend_([u'                                [ language-agnostic interview-questions code-golf rosetta-stone fizzbuzz ]  \n'])
    extend_([u'                            </span>\n'])
    extend_([u'                        </td>\n'])
    extend_([u'                        <td class="counter">\n'])
    extend_([u'                                [Static]\n'])
    extend_([u'                        </td>\n'])
    extend_([u'                    </tr>\n'])
    for question in loop.setup(result):
        if supported_services.info.get(question.service):
            extend_(['                    ', u'<tr class="', escape_(loop.parity, True), u'">\n'])
            extend_(['                    ', u'    <td class="printer">\n'])
            extend_(['                    ', u'        <a target="_blank" href="/export?question=', escape_((question.question_id), True), u'&format=HTML&service=', escape_((question.service), True), u'&linktohome=false"/>\n'])
            extend_(['                    ', u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
            extend_(['                    ', u'        </a>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="service_logo">\n'])
            extend_(['                    ', u'        <a target="_blank" href="', escape_((supported_services.info[question.service]['site_url']), True), u'"><img src="', escape_((supported_services.info[question.service]['icon_url']), True), u'"/></a>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="service_name">\n'])
            extend_(['                    ', u'        [', escape_((supported_services.info[question.service]['name']), True), u']    \n'])
            extend_(['                    ', u'    </td>    \n'])
            extend_(['                    ', u'    <td class="title">\n'])
            extend_(['                    ', u'        <a target="_blank" href="', escape_(question.get_url(), True), u'"/>', escape_(htmlquote(question.title), True), u'</a><br>\n'])
            extend_(['                    ', u'        <span class="tag">\n'])
            extend_(['                    ', u'            [', escape_((", ".join([tag for tag in question.tags])), True), u']\n'])
            extend_(['                    ', u'        </span>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="counter">\n'])
            extend_(['                    ', u'            [', escape_((question.counter), True), u']\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'</tr>\n'])
    else:
        if len(result) == 0:
            extend_(['                    ', u'<p id="not_found">\n'])
            extend_(['                    ', u'    No questions found\n'])
            extend_(['                    ', u'</p>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

deleted = CompiledTemplate(deleted, './deleted.html')
join_ = deleted._join; escape_ = deleted._escape

# coding: utf-8
def export (service, post, pretty_links, printer, link_to_home, pretty_print, comments):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n'])
    extend_([u'<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">\n'])
    extend_([u'        <head>\n'])
    extend_([u'                <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>\n'])
    extend_([u'                <link rel="stylesheet" href="/stylesheets/export.css"/>\n'])
    extend_([u'                <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico"/>\n'])
    extend_([u'                <link rel="canonical" href="http://www.stackprinter.com/export?service=', escape_(service, True), u'&amp;question=', escape_((post.question['question_id']), True), u'&amp;printer=false&amp;linktohome=true"/>\n'])
    extend_([u'                <title>', escape_(post.question['title'], True), u'</title>\n'])
    extend_([u'                <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'                <script type="text/javascript" src="/javascripts/main.js"></script>\n'])
    if pretty_print and 'Prettify' in supported_services.info[service].get('markdown_extensions',''):
        extend_(['                ', u'    <script type="text/javascript" src="/javascripts/prettify/prettify.js"></script>\n'])
        extend_(['                ', u'    <link rel="stylesheet" href="/stylesheets/prettify.css"> \n'])
        extend_(['                ', u'    <script type="text/javascript">jQuery(document).ready(function(){StyleCode();});</script>\n'])
    if 'MathJax' in supported_services.info[service].get('markdown_extensions',''):
        extend_(['                ', u'<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML">\n'])
        extend_(['                ', u'\n'])
        extend_(['                ', u'        MathJax.Hub.Config({"HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"] },\n'])
        extend_(['                ', u'                         tex2jax: { inlineMath: [ ["', u'$', u'", "', u'$', u'"], ["\\\\\\\\(","\\\\\\\\)"] ], displayMath: [ ["', u'$', u'$', u'","', u'$', u'$', u'"], ["\\\\[", "\\\\]"] ], processEscapes: true, ignoreClass: "tex2jax_ignore|dno" },\n'])
        extend_(['                ', u'                         TeX: { noUndefined: { attributes: { mathcolor: "red", mathbackground: "#FFEEEE", mathsize: "90%" } } },\n'])
        extend_(['                ', u'                         messageStyle: "none"\n'])
        extend_(['                ', u'        });\n'])
        extend_(['                ', u'MathJax.Hub.Startup.onload();\n'])
        extend_(['                ', u'</script>\n'])
        if printer:
            extend_(['                ', u'<script type="text/javascript">\n'])
            extend_(['                ', u'    MathJax.Hub.Queue(["Delay",MathJax.Callback,700],Print)\n'])
            extend_(['                ', u'</script>\n'])
    else:
        if printer:
            extend_(['                ', u'<script type="text/javascript">\n'])
            extend_(['                ', u'    jQuery(document).ready(function(){Print();});\n'])
    extend_([u'                </script>\n'])
    extend_([u'    </head>\n'])
    extend_([u'        <body>\n'])
    extend_([u'            <div id="home">\n'])
    if link_to_home:
        extend_(['                ', u'<a href="/"><img title="Back to home" width="20px" height="20px" src="/images/icon_home.png" style="border:0"/></a>\n'])
    extend_([u'                <a href="http://www.stackprinter.com/export?format=HTML&amp;service=', escape_(service, True), u'&amp;printer=false&amp;question=', escape_((post.question['question_id']), True), u'"><img title="Link to this printed question" width="20px" height="20px" alt="share" src="/images/Share.gif" style="border:0"/></a>\n'])
    extend_([u'            </div> \n'])
    extend_([u'        <div id="question-block">\n'])
    extend_([u'          <div id="question-title">\n'])
    extend_([u'                 <img alt="', escape_((supported_services.info[service]['name']), True), u'" src="', escape_((supported_services.info[service]['icon_url']), True), u'"/>', escape_(htmlquote(post.question['title']), True), u'<br/>\n'])
    extend_([u'          </div>\n'])
    extend_([u'          <div class="question-details">\n'])
    extend_([u'                [', escape_((['','+'][(int(post.question['up_vote_count'])-int(post.question['down_vote_count']))>0]), True), escape_((int(post.question['up_vote_count'])-int(post.question['down_vote_count'])), True), u'] [', escape_(post.question['answer_count'], True), u']\n'])
    extend_([u'                 ', escape_(post.question.get('owner', {'display_name':'community_owned'}).get('display_name','community_owned'), True), u' \n'])
    extend_([u'          </div>\n'])
    extend_([u'          <div class="question-details">\n'])
    extend_([u'              [', escape_(date_from(float(post.question['creation_date'])), True), u']\n'])
    extend_([u'          </div>\n'])
    extend_([u'          <div class="question-details">\n'])
    extend_([u'          [\n'])
    for tag in loop.setup(post.question['tags']):
        extend_(['          ', escape_(tag, True), u'\n'])
    extend_([u'          ]\n'])
    extend_([u'          </div>\n'])
    extend_([u'          <div class="question-details">\n'])
    if post.question.has_key('link'):
        extend_(['          ', u'[ ', escape_(post.question['link'], True), u' ]\n'])
    else:
        extend_(['          ', u'[ http://', escape_((service), True), u'.com/questions/', escape_((post.question['question_id']), True), u']\n'])
    if post.is_deleted():
        extend_(['          ', u'[DELETED]\n'])
    extend_([u'          </div>\n'])
    if not 'MathJax' in supported_services.info[service].get('markdown_extensions',''):
        extend_(['          ', u'<div id="adsense">\n'])
        extend_(['          ', u'        <script type="text/javascript"><!--\n'])
        extend_(['          ', u'        google_ad_client = "pub-3296756901484166";\n'])
        extend_(['          ', u'        /* 728x90, created 9/8/11 */\n'])
        extend_(['          ', u'        google_ad_slot = "7129208720";\n'])
        extend_(['          ', u'        google_ad_width = 728;\n'])
        extend_(['          ', u'        google_ad_height = 90;\n'])
        extend_(['          ', u'        //-->\n'])
        extend_(['          ', u'        </script>\n'])
        extend_(['          ', u'        <script type="text/javascript"\n'])
        extend_(['          ', u'        src="http://pagead2.googlesyndication.com/pagead/show_ads.js">\n'])
        extend_(['          ', u'        </script>\n'])
        extend_(['          ', u'</div>\n'])
    extend_([u'          <div id="question">\n'])
    if pretty_links:
        
        (sup_question_body,sup_question_links) = suppify_body(post.question['body'])
        extend_(['          ', escape_(sup_question_body, False), u'\n'])
        extend_(['          ', u'<div id="question-links">\n'])
        for key in loop.setup(sup_question_links.keys()):
            extend_(['          ', u'[', escape_((key), True), u'] ', escape_((sup_question_links[key].replace("&","&amp;")), True), u'<br/>\n'])
        extend_(['          ', u'</div>\n'])
    else:
        extend_(['          ', escape_(post.question['body'], False), u'\n'])
    extend_([u'          </div>\n'])
    if post.question.get('comments') and comments:
        extend_(['            ', u'<div class="question-comments">  \n'])
        for comment in loop.setup(post.question['comments']):
            extend_(['                ', u'<div class="comment">\n'])
            if int(comment['score']) > 0:
                extend_(['                    ', u'(', escape_(comment['score'], True), u')    \n'])
            extend_(['                ', u'    ', escape_(comment['body'], False), u' - <b> ', escape_(comment.get('owner', {'display_name':'community_owned'}).get('display_name','community_owned'), True), u'</b>                   \n'])
            extend_(['                ', u'</div>\n'])
        extend_(['            ', u'</div>\n'])
    extend_([u'          <div class="answers">\n'])
    for answer_number, answer  in loop.setup(enumerate(post.answers)):
        extend_(['              ', u'<div class="answer-details">\n'])
        extend_(['              ', u'    [', escape_((['','+'][(int(answer['up_vote_count'])-int(answer['down_vote_count']))>0]), True), escape_((int(answer['up_vote_count'])-int(answer['down_vote_count'])), True), u']\n'])
        extend_(['              ', u'    [', escape_(date_from(float(answer['creation_date'])), True), u']     \n'])
        extend_(['              ', u'    ', escape_(answer.get('owner', {'display_name':'community_owned'}).get('display_name','community_owned'), True), u'\n'])
        if bool(answer.get('accepted') or answer.get('is_accepted')):
            extend_(['                  ', u'[<img  height="17px" width="17px" src="/images/blackflag.png"/>ACCEPTED]\n'])
        extend_(['              ', u'</div>\n'])
        extend_(['              ', u'<div class="answer">\n'])
        if pretty_links:
            
            (sup_answer_body,sup_answer_links) = suppify_body(answer['body'])
            extend_(['                ', escape_(sup_answer_body, False), u'  \n'])
            for key in loop.setup(sup_answer_links.keys()):
                extend_(['                ', u'[', escape_((key), True), u'] ', escape_((sup_answer_links[key].replace("&","&amp;")), True), u'<br/>\n'])
            extend_(['                ', u'<br/>\n'])
        else:
            extend_(['                ', escape_(answer['body'], False), u'\n'])
        extend_(['              ', u'</div>\n'])
        if answer.get('comments') and comments:
            extend_(['              ', u'<div class="answer-comments">       \n'])
            for comment in loop.setup(answer['comments']):
                extend_(['              ', u'<div class="comment">\n'])
                if int(comment['score']) > 0:
                    extend_(['              ', u' (', escape_(comment['score'], True), u')    \n'])
                extend_(['              ', escape_(comment['body'], False), u' - <b> ', escape_(comment.get('owner',{'display_name':'community_owned'}).get('display_name','community_owned'), True), u'</b>     \n'])
                extend_(['              ', u'</div>\n'])
            extend_(['              ', u'</div>\n'])
        extend_(['              ', u'<div class="answer-pagenumber">', escape_(int(answer_number+1), True), u'</div>\n'])
        extend_(['              ', u'\n'])
    extend_([u'              </div>\n'])
    extend_([u'      </div>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'            var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");\n'])
    extend_([u'            document.write(unescape("%3Cscript src=\'" + gaJsHost + "google-analytics.com/ga.js\' type=\'text/javascript\'%3E%3C/script%3E"));\n'])
    extend_([u'        </script>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'            try {\n'])
    extend_([u'                var pageTracker = _gat._getTracker("UA-4276204-5");\n'])
    extend_([u'                pageTracker._trackPageview();\n'])
    extend_([u'            } catch(err) {}\n'])
    extend_([u'        </script>\n'])
    extend_([u'            <script src="http://static.getclicky.com/js" type="text/javascript"></script>\n'])
    extend_([u'        <script type="text/javascript">clicky.init(250663);</script>\n'])
    extend_([u'        <noscript><p><img alt="Clicky" width="1" height="1" src="http://in.getclicky.com/250663ns.gif" /></p></noscript>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

export = CompiledTemplate(export, './export.html')
join_ = export._join; escape_ = export._escape

# coding: utf-8
def favorites (message = None):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Favorites - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery.cookie.js"></script>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'        jQuery(\n'])
    extend_([u'                function()\n'])
    extend_([u'                {   \n'])
    extend_([u'                    jQuery("#check_username").fadeOut(2000);            \n'])
    extend_([u'                        if (jQuery.cookie("USERNAME") != null){\n'])
    extend_([u'                            jQuery("#input_main").val(jQuery.cookie("USERNAME"));\n'])
    extend_([u'                        }\n'])
    extend_([u'                        else{\n'])
    extend_([u'                            jQuery("#input_main").focus();\n'])
    extend_([u'                        }\n'])
    extend_([u'                        if (jQuery.cookie("SERVICE_FAVORITES") != null){\n'])
    extend_([u'                            jQuery("#service").val(jQuery.cookie("SERVICE_FAVORITES"));\n'])
    extend_([u'                        }\n'])
    extend_([u'                        jQuery("#favorites_button").click(function() {\n'])
    extend_([u'                            input = jQuery.trim(jQuery("#input_main").val())\n'])
    extend_([u'                    if ( input != "") {\n'])
    extend_([u'                            jQuery.cookie("USERNAME", input , { expires: 50 })\n'])
    extend_([u'                            jQuery.cookie("SERVICE_FAVORITES", jQuery("#service").val() , { expires: 50 })\n'])
    extend_([u'                                jQuery("#favorites_form").submit();\n'])
    extend_([u'                        }else{\n'])
    extend_([u'                                jQuery("input_main").focus();                      \n'])
    extend_([u'                                return false;                                \n'])
    extend_([u'                        }                                                    \n'])
    extend_([u'                });\n'])
    extend_([u'                });\n'])
    extend_([u'        </script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'             <div id="main_container">\n'])
    extend_([u'                  <div class="logo">                           \n'])
    extend_([u'                    </div>\n'])
    extend_([u'                  <div class="header links">\n'])
    extend_([u'                      <a class="nolines" href="/">Home</a>|<a class="nolines" href="/myse">MySE</a>|<span class="header_current">Favorites</span>|<a class="nolines" href="/topvoted">TopVoted</a>|<a class="nolines" href="/topprinted">TopPrinted</a>|<a class="nolines" href="/deleted">Deleted</a>|<a class="nolines" href="/about">About</a>\n'])
    extend_([u'                  </div>\n'])
    extend_([u'                  <br>\n'])
    extend_([u'                  <form  id="favorites_form" action="/favorites" method="POST">\n'])
    extend_([u'                      <div id="input_container_favorites">\n'])
    extend_([u'                         <span class="main">Username</span>\n'])
    extend_([u'                             <div id="input_wrapper">\n'])
    extend_([u'                                 <input maxlength="60" name="username" value="" size="20" id="input_main">\n'])
    extend_([u'                             </div>\n'])
    extend_([u'                         <div>                                       \n'])
    extend_([u'                               <select id="service" name="service">\n'])
    for service_key in loop.setup(supported_services.keys):
        if supported_services.info.get(service_key):
            extend_(['                                   ', u'<option  value="', escape_((service_key), True), u'">', escape_((supported_services.info[service_key]['name']), True), u'</option>\n'])
    extend_([u'                                   <option  value="delicious">Delicious</option> \n'])
    extend_([u'                              </select>\n'])
    extend_([u'                          </div>\n'])
    extend_([u'                          <div class="button">\n'])
    extend_([u'                              <input type="image" id="favorites_button" src="/images/getquestions.png" onmouseover="this.src=\'/images/getquestions_MouseOver.png\';" onmouseout="this.src=\'/images/getquestions.png\';" />\n'])
    extend_([u'                          </div>                                        \n'])
    extend_([u'                      </div>\n'])
    extend_([u'                  </form>\n'])
    extend_([u'                  <p id="check_username">\n'])
    if message:
        extend_(['                          ', escape_(message, True), u'\n'])
    extend_([u'                  </p>                              \n'])
    extend_([u'              </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

favorites = CompiledTemplate(favorites, './favorites.html')
join_ = favorites._join; escape_ = favorites._escape

# coding: utf-8
def favorites_delicious (username, result):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Favorites - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/search.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery-ui.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-ui.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/main.js"></script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'        <div id="back">\n'])
    extend_([u'            <a href="/favorites"><img src="/images/search.png"/></a>\n'])
    extend_([u'        </div>\n'])
    extend_([u'             <div id="title" class="main">\n'])
    extend_([u'                 <img src="/images/delicious.jpg"/>&nbsp;Delicious <i>stackoverflow</i> questions <br>\n'])
    extend_([u'            </div>\n'])
    extend_([u'            <p id="input"><a target="_new" href="http://www.delicious.com/', escape_((username), True), u'/stackoverflow">', escape_((username), True), u'</a></p>\n'])
    extend_([u'            \n'])
    extend_([u'            <table cellpadding="2" cellspacing="0">\n'])
    for question in loop.setup(result):
        extend_(['            ', u'<tr class="', escape_(loop.parity, True), u'">\n'])
        extend_(['            ', u'    <td class="printer">\n'])
        extend_(['            ', u'        <a target="_blank" href="/export?question=', escape_((question.question_id), True), u'&format=HTML&service=', escape_((question.service), True), u'&linktohome=false"/>\n'])
        extend_(['            ', u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
        extend_(['            ', u'        </a>\n'])
        extend_(['            ', u'    </td>\n'])
        extend_(['            ', u'    <td class="quicklook">\n'])
        extend_(['            ', u'        <a onclick="javascript:quicklook(', escape_((question.question_id), True), u",'", escape_((question.service), True), u'\');return false;" href="#"/>\n'])
        extend_(['            ', u'            <img title="Quicklook" src="images/quicklook.png"/>\n'])
        extend_(['            ', u'        </a>\n'])
        extend_(['            ', u'    </td>    \n'])
        extend_(['            ', u'    <td class="title">\n'])
        extend_(['            ', u'        <a target="_blank" href="', escape_(question.url, True), u'"/>', escape_(question.title, True), u'</a><br>\n'])
        extend_(['            ', u'        <span class="tag">\n'])
        extend_(['            ', u'            [', escape_((", ".join([tag for tag in question.tags_list if tag!='stackoverflow'])), True), u']\n'])
        extend_(['            ', u'        </span>\n'])
        extend_(['            ', u'    </td>\n'])
        extend_(['            ', u'    <td class="date">\n'])
        extend_(['            ', u'        [', escape_((question.creation_date.strftime('%Y-%m-%d')), True), u']\n'])
        extend_(['            ', u'    </td>\n'])
        extend_(['            ', u'</tr>\n'])
        if loop.last:
            extend_(['            ', u'</table>\n'])
    else:
        if len(result) == 0:
            extend_(['            ', u'<p id="not_found">\n'])
            extend_(['            ', u'    No links found tagged <i>stackoverflow</i> \n'])
            extend_(['            ', u'</p>                            \n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

favorites_delicious = CompiledTemplate(favorites_delicious, './favorites_delicious.html')
join_ = favorites_delicious._join; escape_ = favorites_delicious._escape

# coding: utf-8
def favorites_stackexchange (username, user_id, result, service, pagination):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Favorites - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/search.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery-ui.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-ui.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/main.js"></script>     \n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'        <div id="back">\n'])
    extend_([u'                <a href="/favorites"><img src="/images/search.png"/></a>\n'])
    extend_([u'            </div>\n'])
    extend_([u'             <div id="title" class="main"><img src="', escape_((supported_services.info[service]['icon_url']), True), u'"/>', escape_((supported_services.info[service]['name']), True), u'&nbsp;<i>favorites</i> questions <br></div>\n'])
    extend_([u'             <p id="input"><a target="_new" href="http://', escape_((service), True), u'.com/users/', escape_((user_id), True), u'/', escape_((username), True), u'">', escape_((username), True), u'</a></p>\n'])
    extend_([u'             <table cellpadding="2" cellspacing="0">\n'])
    for question in loop.setup(result):
        extend_(['                    ', u'<tr class="', escape_(loop.parity, True), u'">\n'])
        extend_(['                    ', u'    <td class="printer">\n'])
        extend_(['                    ', u'        <a target="_blank" href="/export?question=', escape_((question.question_id), True), u'&format=HTML&service=', escape_((question.service), True), u'&linktohome=false"/>\n'])
        extend_(['                    ', u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
        extend_(['                    ', u'        </a>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="quicklook">\n'])
        extend_(['                    ', u'        <a onclick="javascript:quicklook(', escape_((question.question_id), True), u",'", escape_((question.service), True), u'\');return false;" href="#"/>\n'])
        extend_(['                    ', u'            <img title="Quicklook" src="images/quicklook.png"/>\n'])
        extend_(['                    ', u'        </a>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="counters">\n'])
        extend_(['                    ', u'        [', escape_(question.get_votes(), True), u']<br>[', escape_(question.answer_count, True), u']\n'])
        extend_(['                    ', u'    </td>    \n'])
        extend_(['                    ', u'    <td class="title">\n'])
        extend_(['                    ', u'        <a target="_blank" href="', escape_(question.url, True), u'"/>', escape_(htmlquote(question.title), True), u'</a><br>\n'])
        extend_(['                    ', u'        <span class="tag">\n'])
        extend_(['                    ', u'            [', escape_((", ".join([tag for tag in question.tags_list])), True), u']\n'])
        extend_(['                    ', u'        </span>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="date">\n'])
        extend_(['                    ', u'            [', escape_((question.creation_date.strftime('%Y-%m-%d')), True), u']\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'</tr>\n'])
        if loop.last:
            extend_(['                    ', u'</table>\n'])
            extend_(['                    ', u'<table id="pagination">\n'])
            extend_(['                    ', u'    <tr>\n'])
            extend_(['                    ', u'        <td class="pagination_found">Found: ', escape_(commify(pagination.total), True), u'</td>\n'])
            extend_(['                    ', u'        <td class="pagination_page">\n'])
            if pagination.has_previous_entries():
                extend_(['                                ', u'    <a href="/favorites?service=', escape_((service), True), u'&userid=', escape_((user_id), True), u'&page=', escape_((pagination.page-1), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">&laquo; prev&nbsp;&nbsp;</a>\n'])
            for page in loop.setup(pagination.get_pretty_pagination()):
                if page != -1:
                    extend_(['                                ', u'<a href="/favorites?service=', escape_((service), True), u'&userid=', escape_((user_id), True), u'&page=', escape_((page), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">\n'])
                    if page == pagination.page:
                        extend_(['                                    ', u'|', escape_((page), True), u'|    \n'])
                    else:
                        extend_(['                                    ', escape_(page, True), u' \n'])
                    extend_(['                                ', u'</a>\n'])
                else:
                    extend_(['                                ', escape_(pagination.separator, True), u'\n'])
            if pagination.has_more_entries():
                extend_(['                                ', u'       <a href="/favorites?service=', escape_((service), True), u'&userid=', escape_((user_id), True), u'&page=', escape_((pagination.page+1), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">&nbsp;&nbsp;next &raquo;</a>\n'])
            extend_(['                    ', u'        </td>\n'])
            extend_(['                    ', u'        <td class="pagination_pagesize">Pagesize: ', escape_(pagination.pagesize, True), u'</td>\n'])
            extend_(['                    ', u'    </tr>\n'])
            extend_(['                    ', u'</table>\n'])
    else:
        if len(result) == 0:
            extend_(['                    ', u'<p id="not_found">\n'])
            extend_(['                    ', u'    No questions found\n'])
            extend_(['                    ', u'</p>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

favorites_stackexchange = CompiledTemplate(favorites_stackexchange, './favorites_stackexchange.html')
join_ = favorites_stackexchange._join; escape_ = favorites_stackexchange._escape

# coding: utf-8
def favorites_user_selection (users, service):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Favorites - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/scrollable.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery.tools.min.js"></script>\n'])
    extend_([u'        <script>\n'])
    extend_([u'            jQuery(function() {\n'])
    extend_([u'                jQuery(".scrollable").scrollable({ vertical: true, mousewheel: true});\n'])
    extend_([u'            });\n'])
    extend_([u'        </script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'             <div id="main_container">\n'])
    extend_([u'                  <div class="logo">                           \n'])
    extend_([u'                    </div>\n'])
    extend_([u'                  <div class="header links">\n'])
    extend_([u'                      <a class="nolines" href="/">Home</a>|<a class="nolines" href="/myse">MySE</a>|<span class="header_current">Favorites</span>|<a class="nolines" href="/topvoted">TopVoted</a>|<a class="nolines" href="/topprinted">TopPrinted</a>|<a class="nolines" href="/deleted">Deleted</a>|<a class="nolines" href="/about">About</a>\n'])
    extend_([u'                  </div>\n'])
    extend_([u'                  <div id="user_selection_container">\n'])
    extend_([u'                      <div id="result"><a href="/favorites"><img style="border:0;height:15px;width:15px"src="/images/search.png"></a>&nbsp;', escape_((len(users)), True), u' users found</div>\n'])
    extend_([u'                      <div class="scrollable vertical">\n'])
    extend_([u'                        <div class="items">\n'])
    for rown, user in loop.setup(enumerate(users)):
        if rown % 3 == 0 :
            extend_(['                            ', u'<div>\n'])
        extend_(['                            ', u'<div class="item">\n'])
        extend_(['                            ', u'    <img src="', escape_((user['profile_image']), True), u'?s=40&d=identicon&r=PG" />    \n'])
        extend_(['                            ', u'    <table>\n'])
        extend_(['                            ', u'        <tr>\n'])
        extend_(['                            ', u'            <td>\n'])
        extend_(['                            ', u'                <a href="/favorites?username=', escape_((user['display_name']), True), u'|', escape_((user['user_id']), True), u'&service=', escape_((service), True), u'">', escape_((user['display_name']), True), u'</a>\n'])
        extend_(['                            ', u'            </td>\n'])
        extend_(['                            ', u'        </tr>\n'])
        extend_(['                            ', u'        <tr>\n'])
        extend_(['                            ', u'            <td>\n'])
        extend_(['                            ', u'                <table>\n'])
        extend_(['                            ', u'                    <tr>\n'])
        extend_(['                            ', u'                        <td style="padding-right:20px;font-weight:bold">', escape_(commify(user['reputation']), True), u'</td>\n'])
        if (user['badge_counts'].get('gold',0) > 0) :
            extend_(['                                                    ', u'<td>\n'])
            extend_(['                                                    ', u'    <img style="width:6px;height:6px;margin:0px"  src="/images/badge_gold.png"/>\n'])
            extend_(['                                                    ', u'</td>\n'])
            extend_(['                                                    ', u'<td>\n'])
            extend_(['                                                    ', u'    ', escape_((user['badge_counts'].get('gold')), True), u' \n'])
            extend_(['                                                    ', u'</td>\n'])
        if (user['badge_counts'].get('silver',0) > 0) :
            extend_(['                                                    ', u'<td>\n'])
            extend_(['                                                    ', u'    <img style="width:6px;height:6px;margin:0px" src="/images/badge_silver.png"/>\n'])
            extend_(['                                                    ', u'</td>\n'])
            extend_(['                                                    ', u'<td>\n'])
            extend_(['                                                    ', u'    ', escape_((user['badge_counts'].get('silver')), True), u'\n'])
            extend_(['                                                    ', u'</td>\n'])
        if (user['badge_counts'].get('bronze',0) > 0) :
            extend_(['                                                    ', u'<td>\n'])
            extend_(['                                                    ', u'    <img style="width:6px;height:6px;margin:0px" src="/images/badge_bronze.png"/>\n'])
            extend_(['                                                    ', u'</td>\n'])
            extend_(['                                                    ', u'<td>\n'])
            extend_(['                                                    ', u'    ', escape_((user['badge_counts'].get('bronze')), True), u'\n'])
            extend_(['                                                    ', u'</td>\n'])
        extend_(['                            ', u'                    </tr>\n'])
        extend_(['                            ', u'                </table>\n'])
        extend_(['                            ', u'            </td>\n'])
        extend_(['                            ', u'       </tr>\n'])
        extend_(['                            ', u'    </table>\n'])
        extend_(['                            ', u'</div>\n'])
        if ((rown+1) % 3 == 0 and rown!=0) or (rown == len(users)-1):
            extend_(['                            ', u'</div>\n'])
    extend_([u'                        </div>\n'])
    extend_([u'                      </div>\n'])
    if len(users) > 3:
        extend_(['                      ', u'<div id="actions">\n'])
        extend_(['                      ', u'     <a class="prev">&laquo; prev</a>\n'])
        extend_(['                      ', u'     <a class="next">More users &raquo;</a>\n'])
        extend_(['                      ', u'</div>\n'])
    extend_([u'                    </div>\n'])
    extend_([u'              </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

favorites_user_selection = CompiledTemplate(favorites_user_selection, './favorites_user_selection.html')
join_ = favorites_user_selection._join; escape_ = favorites_user_selection._escape

# coding: utf-8
def index (counter):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html xmlns="http://www.w3.org/1999/xhtml">\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <META name="y_key" content="ded75be7a9c283bf" />\n'])
    extend_([u'        <meta name="msvalidate.01" content="B1898196AA6A9934D5A056A346AF7EAF" />\n'])
    extend_([u'        <meta name="google-site-verification" content="Gje2eDNJYqM29mwtIs3LrR-28OBbtntH1YiNHkPS9yY" />\n'])
    extend_([u'        <meta name="google-site-verification" content="m05zkgXk41nY4dXLheGpLdTiTnx-JduC2XOamAra_6Q" />\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite. StackPrinter offers a detailed Printer-friendly rendering of Stack Exchange questions, answers and comments. ">\n'])
    extend_([u'        <meta name="keywords" content="printer-friendly printer printerfriendly stackoverflow stackapps stackexchange programmers programming joke cartoons hidden features">\n'])
    extend_([u'        <title>StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css"/>\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico"/>\n'])
    extend_([u'        <script src="http://static.getclicky.com/js" type="text/javascript"></script>\n'])
    extend_([u'        <script type="text/javascript">clicky.init(250663);</script>\n'])
    extend_([u'        <noscript><p><img alt="Clicky" width="1" height="1" src="http://in.getclicky.com/250663ns.gif" /></p></noscript>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'            var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");\n'])
    extend_([u'            document.write(unescape("%3Cscript src=\'" + gaJsHost + "google-analytics.com/ga.js\' type=\'text/javascript\'%3E%3C/script%3E"));\n'])
    extend_([u'        </script>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'            try {\n'])
    extend_([u'                var pageTracker = _gat._getTracker("UA-4276204-5");\n'])
    extend_([u'                pageTracker._trackPageview();\n'])
    extend_([u'            } catch(err) {}\n'])
    extend_([u'        </script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/typewatch.js"></script>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'        \n'])
    extend_([u'        function getQuestion(question) {\n'])
    extend_([u"                        if (jQuery.trim(question)!=''){\n"])
    extend_([u"                        jQuery('#question_title').html('&nbsp;');\n"])
    extend_([u"                        jQuery('#input_main').addClass('ac_loading');\n"])
    extend_([u"                            var service = jQuery('#service').val();\n"])
    extend_([u'                                jQuery.getJSON("/question?question="+question+"&service="+service, function(data){\n'])
    extend_([u"                             jQuery('#question_title').text(data.title);\n"])
    extend_([u"                             jQuery('#input_main').removeClass('ac_loading');\n"])
    extend_([u'                    });\n'])
    extend_([u'             }\n'])
    extend_([u'                }\n'])
    extend_([u'        jQuery(\n'])
    extend_([u'                function()\n'])
    extend_([u'                {\n'])
    extend_([u'                        jQuery("#input_main").focus();\n'])
    extend_([u'                        jQuery("#question_button").click(function() {\n'])
    extend_([u'                    if (jQuery.trim(jQuery("#input_main").val()) != "") {\n'])
    extend_([u'                                jQuery("#question_form").submit()\n'])
    extend_([u'                        }else{\n'])
    extend_([u'                                jQuery("#input_main").focus();                                                     \n'])
    extend_([u'                        }\n'])
    extend_([u'                    return false;                                                     \n'])
    extend_([u'                });\n'])
    extend_([u"                jQuery('#input_main').bind('keypress', function(e) {\n"])
    extend_([u"                    jQuery('#question_title').html('&nbsp;');\n"])
    extend_([u'                });\n'])
    extend_([u'\n'])
    extend_([u'                jQuery("#input_main").typeWatch( {wait: 500,captureLength: -1, callback:getQuestion } );\n'])
    extend_([u'                \n'])
    extend_([u"                jQuery('#service').bind({\n"])
    extend_([u'                    keypress: function() {\n'])
    extend_([u"                    getQuestion(document.getElementById('input_main').value);\n"])
    extend_([u'                    },\n'])
    extend_([u'                    change: function() {\n'])
    extend_([u"                    getQuestion(document.getElementById('input_main').value);\n"])
    extend_([u'                    }\n'])
    extend_([u'                });\n'])
    extend_([u'                \n'])
    extend_([u"                jQuery('#input_main').bind('keyup blur',function(){ \n"])
    extend_([u"                    jQuery(this).val( jQuery(this).val().replace(/[^0-9]/g,'') ); }\n"])
    extend_([u'                );\n'])
    extend_([u'\n'])
    extend_([u'                });\n'])
    extend_([u'        </script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'         <div id="main_container">\n'])
    extend_([u'              <div class="logo">                           \n'])
    extend_([u'              </div>\n'])
    extend_([u'              <div class="header links">\n'])
    extend_([u'                  <span class="header_current">Home</span>|<a class="nolines" href="/myse">MySE</a>|<a class="nolines" href="/favorites">Favorites</a>|<a class="nolines" href="/topvoted">TopVoted</a>|<a class="nolines" href="/topprinted">TopPrinted</a>|<a class="nolines" href="/deleted">Deleted</a>|<a class="nolines" href="/about">About</a>\n'])
    extend_([u'              </div>\n'])
    extend_([u'              <br/>\n'])
    extend_([u'              <form id="question_form" action="/export" method="post">\n'])
    extend_([u'                  <div id="input_container_question">\n'])
    extend_([u'                     <span class="main">Question id</span>\n'])
    extend_([u'                     <div id="input_wrapper">\n'])
    extend_([u'                         <input maxlength="10" name="question" title="StackPrinter" value="" size="12" id="input_main"/>\n'])
    extend_([u'                     </div>\n'])
    extend_([u'                     <div>                                       \n'])
    extend_([u'                          <select id="service" name="service">\n'])
    for service_key in loop.setup(supported_services.keys):
        if supported_services.info.get(service_key):
            extend_(['                              ', u'<option  value="', escape_((service_key), True), u'">', escape_((supported_services.info[service_key]['name']), True), u'</option> \n'])
    extend_([u'                         </select>\n'])
    extend_([u'                     </div>\n'])
    extend_([u'                     <div class="button">\n'])
    extend_([u'                         <input type="image" id="question_button" src="/images/print.png" onmouseover="this.src=\'/images/print_MouseOver.png\';" onmouseout="this.src=\'/images/print.png\';" />\n'])
    extend_([u'                     </div>\n'])
    extend_([u'                  </div>\n'])
    extend_([u'              </form>\n'])
    extend_([u'              <p id="question_title">&nbsp;</p>\n'])
    extend_([u'              <div class="links">                           \n'])
    extend_([u'                <ul id="links_block">\n'])
    extend_([u'                    <li><b>Sample</b>:  <a target="_blank" href="/export?format=HTML&service=stackoverflow&question=3800707&printer=false"/>What is negative code ?</a>\n'])
    extend_([u'                    <li><a href="http://userscripts-mirror.org/scripts/show/77298.html" >StackPrinter GreaseMonkey script</a></li>\n'])
    extend_([u'                    <li><a href="javascript:(function(){var re = new RegExp(\'^http://(.*?)\\.com/questions/([0-9]+)/\');var group = re.exec(window.location.href);if (group!=null){var service = group[1];var questionid=group[2];window.open(\'http://www.stackprinter.com/export?format=HTML&service=\'+service+\'&question=\'+questionid)}else{alert(\'Attention: question id not found!\')}})()">StackPrinter Bookmarklet</a></li> \n'])
    extend_([u'                    <li><a href="http://stackapps.com/questions/179/stackprinter-the-stack-exchange-printer-suite">Feedback</a>\n'])
    extend_([u'                    <li><a href="https://twitter.com/systempuntoout">@Systempuntoout</a>    \n'])
    extend_([u'                    <li>Questions printed so far: <b>', escape_((counter), True), u'</b> </li>\n'])
    extend_([u'                    <li>Sponsor: <a class="nolines" href="http://www.calcolobolloauto.net">Calcolo Bollo Auto</a></li>\n'])
    extend_([u'                </ul>\n'])
    extend_([u'              </div>\n'])
    extend_([u'              <div id="appengine_logo">\n'])
    extend_([u'                  <img margin="0" border="0" src="/images/appengine.gif"/>\n'])
    extend_([u'              </div>                                 \n'])
    extend_([u'          </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

index = CompiledTemplate(index, './index.html')
join_ = index._join; escape_ = index._escape

# coding: utf-8
def myse (user, associated_sites, associated_sites_keys):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>MySE - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery.tools.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery.cookie.js"></script>\n'])
    extend_([u'        <script>\n'])
    extend_([u'            jQuery(\n'])
    extend_([u'                function()\n'])
    extend_([u'                {\n'])
    extend_([u"                    jQuery('#favorites').click(function(e){\n"])
    extend_([u"                        jQuery('#category').val('favorites');\n"])
    extend_([u'                        jQuery.cookie("SERVICE_MYSE", jQuery("#service").val() , { expires: 50 })\n'])
    extend_([u"                        jQuery('#myse_form').submit();\n"])
    extend_([u'                        return false;\n'])
    extend_([u'                    });\n'])
    extend_([u"                    jQuery('#asked').click(function(e){\n"])
    extend_([u"                        jQuery('#category').val('asked');\n"])
    extend_([u'                        jQuery.cookie("SERVICE_MYSE", jQuery("#service").val() , { expires: 50 })\n'])
    extend_([u"                        jQuery('#myse_form').submit();\n"])
    extend_([u'                        return false;\n'])
    extend_([u'                    });\n'])
    extend_([u"                    jQuery('#answered').click(function(e){\n"])
    extend_([u"                        jQuery('#category').val('answered');\n"])
    extend_([u'                        jQuery.cookie("SERVICE_MYSE", jQuery("#service").val() , { expires: 50 })\n'])
    extend_([u"                        jQuery('#myse_form').submit();\n"])
    extend_([u'                        return false;\n'])
    extend_([u'                    });\n'])
    extend_([u'                    \n'])
    extend_([u'\n'])
    extend_([u'                    if (jQuery.cookie("SERVICE_MYSE") != null){\n'])
    extend_([u'                        jQuery("#service").val(jQuery.cookie("SERVICE_MYSE"));\n'])
    extend_([u'                    }\n'])
    extend_([u'                }\n'])
    extend_([u'            )\n'])
    extend_([u'        </script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'             <div id="main_container">\n'])
    extend_([u'                  <div class="logo">                           \n'])
    extend_([u'                  </div>\n'])
    extend_([u'                  <div class="header links">\n'])
    extend_([u'                      <a class="nolines" href="/">Home</a>|<span class="header_current">MySE</span>|<a class="nolines" href="/favorites">Favorites</a>|<a class="nolines" href="/topvoted">TopVoted</a>|<a class="nolines" href="/topprinted">TopPrinted</a>|<a class="nolines" href="/deleted">Deleted</a>|<a class="nolines" href="/about">About</a>\n'])
    if user:
        extend_(['                      ', u'<span style="float:right"><a href="/myse?logout=true">Logout</a></span>\n'])
        extend_(['                      ', u'\n'])
    extend_([u'                  </div>\n'])
    if user:
        extend_(['                  ', u'  <div id="input_container_myse">\n'])
        extend_(['                  ', u'      <div>\n'])
        extend_(['                  ', u'          <img src="', escape_((user['profile_image']), True), u'?s=40&d=identicon&r=PG" />\n'])
        extend_(['                  ', u'      </div>\n'])
        extend_(['                  ', u'      <div style="font-family:Courier;font-size:0.8em;margin-top:10px;margin-bottom:10px">\n'])
        extend_(['                  ', u'          ', escape_((user['display_name']), True), u'\n'])
        extend_(['                  ', u'      </div>\n'])
        extend_(['                  ', u'      <div>\n'])
        extend_(['                  ', u'          <form id="myse_form" action="/myse">\n'])
        extend_(['                  ', u'\n'])
        extend_(['                  ', u'          <select id="service" name="service">\n'])
        for service_key in loop.setup(associated_sites_keys):
            extend_(['                                  ', u'<option  value="', escape_((service_key), True), u'">', escape_((supported_services.info[service_key]['name']), True), u'</option> \n'])
        extend_(['                  ', u'           </select>\n'])
        extend_(['                  ', u'           <input type="hidden" id="category" name="category" value="">\n'])
        extend_(['                  ', u'          </form>\n'])
        extend_(['                  ', u'      </div>\n'])
        extend_(['                  ', u'      <div class="links">                           \n'])
        extend_(['                  ', u'          <ul id="links_block" style="margin-top:20px">\n'])
        extend_(['                  ', u'              <li><a id="asked" href="#">Questions</a></li>\n'])
        extend_(['                  ', u'              <li><a id="answered" href="#">Answers</a></li>\n'])
        extend_(['                  ', u'              <li><a id="favorites" href="#">Favorites</a></li>\n'])
        extend_(['                  ', u'          </ul>\n'])
        extend_(['                  ', u'        </div>\n'])
        extend_(['                  ', u'  </div>\n'])
    else:
        extend_(['                  ', u'<center>\n'])
        extend_(['                  ', u'      <div id="myse_login">                         \n'])
        extend_(['                  ', u'      </div>\n'])
        extend_(['                  ', u'      <br/>\n'])
        extend_(['                  ', u'      <span style="font-family:Courier;font-size:0.8em;">                           \n'])
        extend_(['                  ', u'          Welcome Guest! Please <a href="/auth/stackexchange">Login</a> \n'])
        extend_(['                  ', u'     </span>                              \n'])
        extend_(['                  ', u'  </center>\n'])
        extend_(['                  ', u'\n'])
    extend_([u'             </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

myse = CompiledTemplate(myse, './myse.html')
join_ = myse._join; escape_ = myse._escape

# coding: utf-8
def myse_questions (username, user_id, result, service, pagination, category):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>MySe - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/search.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery-ui.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-ui.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/main.js"></script>     \n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'        <div id="back">\n'])
    extend_([u'                <a href="/myse"><img src="/images/profile.png"/></a>\n'])
    extend_([u'            </div>\n'])
    extend_([u'             <div id="title" class="main"><img src="', escape_((supported_services.info[service]['icon_url']), True), u'"/>', escape_((supported_services.info[service]['name']), True), u'&nbsp;<i>', escape_(category, True), u'</i> questions <br></div>\n'])
    extend_([u'             <p id="input"><a target="_new" href="http://', escape_((service), True), u'.com/users/', escape_((user_id), True), u'/', escape_((username), True), u'">', escape_((username), True), u'</a></p>\n'])
    extend_([u'             <table cellpadding="2" cellspacing="0">\n'])
    for question in loop.setup(result):
        extend_(['                    ', u'<tr class="', escape_(loop.parity, True), u'">\n'])
        extend_(['                    ', u'    <td class="printer">\n'])
        extend_(['                    ', u'        <a target="_blank" href="/export?question=', escape_((question.question_id), True), u'&format=HTML&service=', escape_((question.service), True), u'&linktohome=false"/>\n'])
        extend_(['                    ', u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
        extend_(['                    ', u'        </a>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="quicklook">\n'])
        extend_(['                    ', u'        <a onclick="javascript:quicklook(', escape_((question.question_id), True), u",'", escape_((question.service), True), u'\');return false;" href="#"/>\n'])
        extend_(['                    ', u'            <img title="Quicklook" src="images/quicklook.png"/>\n'])
        extend_(['                    ', u'        </a>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="counters">\n'])
        extend_(['                    ', u'        [', escape_(question.get_votes(), True), u']<br>[', escape_(question.answer_count, True), u']\n'])
        extend_(['                    ', u'    </td>    \n'])
        extend_(['                    ', u'    <td class="title">\n'])
        extend_(['                    ', u'        <a target="_blank" href="', escape_(question.url, True), u'"/>', escape_(htmlquote(question.title), True), u'</a><br>\n'])
        extend_(['                    ', u'        <span class="tag">\n'])
        extend_(['                    ', u'            [', escape_((", ".join([tag for tag in question.tags_list])), True), u']\n'])
        extend_(['                    ', u'        </span>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="date">\n'])
        extend_(['                    ', u'            [', escape_((question.creation_date.strftime('%Y-%m-%d')), True), u']\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'</tr>\n'])
        if loop.last:
            extend_(['                    ', u'</table>\n'])
            extend_(['                    ', u'<table id="pagination">\n'])
            extend_(['                    ', u'    <tr>\n'])
            extend_(['                    ', u'        <td class="pagination_found">Found: ', escape_(commify(pagination.total), True), u'</td>\n'])
            extend_(['                    ', u'        <td class="pagination_page">\n'])
            if pagination.has_previous_entries():
                extend_(['                                ', u'    <a href="/myse?category=', escape_((category), True), u'&service=', escape_((service), True), u'&userid=', escape_((user_id), True), u'&page=', escape_((pagination.page-1), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">&laquo; prev&nbsp;&nbsp;</a>\n'])
            for page in loop.setup(pagination.get_pretty_pagination()):
                if page != -1:
                    extend_(['                                ', u'<a href="/myse?category=', escape_((category), True), u'&service=', escape_((service), True), u'&userid=', escape_((user_id), True), u'&page=', escape_((page), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">\n'])
                    if page == pagination.page:
                        extend_(['                                    ', u'|', escape_((page), True), u'|    \n'])
                    else:
                        extend_(['                                    ', escape_(page, True), u' \n'])
                    extend_(['                                ', u'</a>\n'])
                else:
                    extend_(['                                ', escape_(pagination.separator, True), u'\n'])
            if pagination.has_more_entries():
                extend_(['                                ', u'       <a href="/myse?category=favorites&service=', escape_((service), True), u'&userid=', escape_((user_id), True), u'&page=', escape_((pagination.page+1), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">&nbsp;&nbsp;next &raquo;</a>\n'])
            extend_(['                    ', u'        </td>\n'])
            extend_(['                    ', u'        <td class="pagination_pagesize">Pagesize: ', escape_(pagination.pagesize, True), u'</td>\n'])
            extend_(['                    ', u'    </tr>\n'])
            extend_(['                    ', u'</table>\n'])
    else:
        if len(result) == 0:
            extend_(['                    ', u'<p id="not_found">\n'])
            extend_(['                    ', u'    No questions found\n'])
            extend_(['                    ', u'</p>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

myse_questions = CompiledTemplate(myse_questions, './myse_questions.html')
join_ = myse_questions._join; escape_ = myse_questions._escape

# coding: utf-8
def oops (message):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'         <div id="home">\n'])
    extend_([u'                <a href="/"><img width="20px" heigth="20px" border="0" src="/images/icon_home.png"/></a>\n'])
    extend_([u'            </div>\n'])
    extend_([u'         <center>\n'])
    extend_([u'              <div class="oops">                         \n'])
    extend_([u'              </div>\n'])
    extend_([u'              <br>\n'])
    extend_([u'              <div id="oops_message">                           \n'])
    extend_([u'                  ', escape_(ERROR_MESSAGE, True), u'<br>\n'])
    extend_([u'                  ', escape_((message), True), u'\n'])
    extend_([u'             </div>                              \n'])
    extend_([u'          </center>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

oops = CompiledTemplate(oops, './oops.html')
join_ = oops._join; escape_ = oops._escape

# coding: utf-8
def quicklook (service, question, accepted_answer):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<div id="quicklook_question-block">\n'])
    extend_([u'  <div id="quicklook_printer">\n'])
    extend_([u'        <a target="_blank" href="/export?question=', escape_((question['question_id']), True), u'&format=HTML&service=', escape_((service), True), u'&linktohome=false">\n'])
    extend_([u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
    extend_([u'        </a>                            \n'])
    extend_([u'  </div>\n'])
    extend_([u'  <div id="quicklook_question-title">\n'])
    extend_([u'         <img src="', escape_((supported_services.info[service]['icon_url']), True), u'"/>', escape_(htmlquote(question['title']), True), u'<br>\n'])
    extend_([u'  </div>\n'])
    extend_([u'  <div id="quicklook_question-details">\n'])
    extend_([u'        [', escape_((['','+'][(int(question['up_vote_count'])-int(question['down_vote_count']))>0]), True), escape_((int(question['up_vote_count'])-int(question['down_vote_count'])), True), u'] [', escape_(question['answer_count'], True), u' answers]\n'])
    extend_([u'        ', escape_(question.get('owner', {'display_name':'community_owned'}).get('display_name','community_owned'), True), u'\n'])
    extend_([u'  </div>\n'])
    extend_([u'  <div id="quicklook_question-details">\n'])
    extend_([u'      [', escape_(date_from(float(question['creation_date'])), True), u']\n'])
    extend_([u'  </div>\n'])
    extend_([u'  <div id="quicklook_question-details">\n'])
    extend_([u'  [\n'])
    for tag in loop.setup(question['tags']):
        extend_(['  ', escape_(tag, True), u'\n'])
    extend_([u'  ]\n'])
    extend_([u'  </div>\n'])
    extend_([u'  <div id="quicklook_question">\n'])
    extend_([u'      ', escape_(question['body'], True), u'\n'])
    extend_([u'  </div>\n'])
    if accepted_answer is not None:
        extend_(['  ', u'  <hr>\n'])
        extend_(['  ', u'  <div id="accepted_answer_block">\n'])
        extend_(['  ', u'      <div id="quicklook_answer-details">\n'])
        extend_(['  ', u'            [', escape_((['','+'][(int(accepted_answer['up_vote_count'])-int(accepted_answer['down_vote_count']))>0]), True), escape_((int(accepted_answer['up_vote_count'])-int(accepted_answer['down_vote_count'])), True), u']\n'])
        extend_(['  ', u'            [', escape_(date_from(float(accepted_answer['creation_date'])), True), u']     \n'])
        extend_(['  ', u'            ', escape_(accepted_answer.get('owner', {'display_name':'community_owned'}).get('display_name','community_owned'), True), u' [<img  height="17px" width="17px" src="/images/blackflag.png"/>ACCEPTED]\n'])
        extend_(['  ', u'      </div>\n'])
        extend_(['  ', u'      <div id="quicklook_answer">\n'])
        extend_(['  ', u'              ', escape_(accepted_answer['body'], True), u'\n'])
        extend_(['  ', u'      </div>\n'])
        extend_(['  ', u'  </div>  \n'])
    extend_([u'</div>\n'])

    return self

quicklook = CompiledTemplate(quicklook, './quicklook.html')
join_ = quicklook._join; escape_ = quicklook._escape

# coding: utf-8
def sitemap_index (sitemaps):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<?xml version="1.0" encoding="UTF-8"?>\n'])
    extend_([u'<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n'])
    for sitemap in loop.setup(sitemaps):
        extend_(['  ', u'<sitemap>\n'])
        extend_(['  ', u'    <loc>http://www.stackprinter.com/sitemap_', escape_((sitemap.key().id()), True), u'.xml</loc>\n'])
        extend_(['  ', u'    <lastmod>', escape_((sitemap.last_modified.strftime("%Y-%m-%d")), True), u'</lastmod>\n'])
        extend_(['  ', u'</sitemap>\n'])
    extend_([u'</sitemapindex>\n'])

    return self

sitemap_index = CompiledTemplate(sitemap_index, './sitemap_index.xml')
join_ = sitemap_index._join; escape_ = sitemap_index._escape

# coding: utf-8
def sitemap_questions (questions):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<?xml version="1.0" encoding="UTF-8"?>\n'])
    extend_([u'<urlset\n'])
    extend_([u'      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"\n'])
    extend_([u'      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n'])
    extend_([u'      xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9\n'])
    extend_([u'http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">\n'])
    for question in loop.setup(questions):
        extend_(['  ', u'<url>\n'])
        extend_(['  ', u'  <loc>http://www.stackprinter.com/export?service=', escape_((question.split('_')[1]), True), u'&amp;question=', escape_((question.split('_')[0]), True), u'&amp;printer=false&amp;linktohome=true</loc>\n'])
        extend_(['  ', u'</url>\n'])
    extend_([u'</urlset>\n'])

    return self

sitemap_questions = CompiledTemplate(sitemap_questions, './sitemap_questions.xml')
join_ = sitemap_questions._join; escape_ = sitemap_questions._escape

# coding: utf-8
def topprinted (result, page , pagesize, count):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Top Printed - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/search.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery-ui.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-ui.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/main.js"></script>     \n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'             <div id="back">\n'])
    extend_([u'                    <a href="/"><img title="Back to home" width="20px" height="20px" border="0" src="/images/icon_home.png"/></a>\n'])
    extend_([u'                 </div>\n'])
    extend_([u'             <div id="title" class="main"><i>Top Printed</i> questions</div>\n'])
    extend_([u'             <table cellpadding="2" cellspacing="0">\n'])
    for question in loop.setup(result):
        if supported_services.info.get(question.service):
            extend_(['                    ', u'<tr class="', escape_(loop.parity, True), u'">\n'])
            extend_(['                    ', u'    <td class="printer">\n'])
            extend_(['                    ', u'        <a target="_blank" href="/export?question=', escape_((question.question_id), True), u'&format=HTML&service=', escape_((question.service), True), u'&linktohome=false"/>\n'])
            extend_(['                    ', u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
            extend_(['                    ', u'        </a>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="quicklook">\n'])
            if question.deleted:
                extend_(['                            ', u'<img title="Deleted" src="images/deleted.png"/>\n'])
            else:
                extend_(['                            ', u'<a onclick="javascript:quicklook(', escape_((question.question_id), True), u",'", escape_((question.service), True), u'\');return false;" href="#"/>\n'])
                extend_(['                            ', u'    <img title="Quicklook" src="images/quicklook.png"/>\n'])
                extend_(['                            ', u'</a>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="service_logo">\n'])
            extend_(['                    ', u'        <a target="_blank" href="', escape_((supported_services.info[question.service]['site_url']), True), u'"><img src="', escape_((supported_services.info[question.service]['icon_url']), True), u'"/></a>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="service_name">\n'])
            extend_(['                    ', u'        [', escape_((supported_services.info[question.service]['name']), True), u']    \n'])
            extend_(['                    ', u'    </td>    \n'])
            extend_(['                    ', u'    <td class="title">\n'])
            extend_(['                    ', u'        <a target="_blank" href="', escape_(question.get_url(), True), u'"/>', escape_(htmlquote(question.title), True), u'</a><br>\n'])
            extend_(['                    ', u'        <span class="tag">\n'])
            extend_(['                    ', u'            [', escape_((", ".join([tag for tag in question.tags])), True), u']\n'])
            extend_(['                    ', u'        </span>\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'    <td class="counter">\n'])
            extend_(['                    ', u'            [', escape_((question.counter), True), u']\n'])
            extend_(['                    ', u'    </td>\n'])
            extend_(['                    ', u'</tr>\n'])
        if loop.last:
            extend_(['                    ', u'</table>\n'])
            extend_(['                    ', u'<table id="pagination">\n'])
            extend_(['                    ', u'    <tr>\n'])
            extend_(['                    ', u'        <td class="pagination_found">Found: ', escape_(commify(count), True), u'</td>\n'])
            extend_(['                    ', u'        <td class="pagination_page">\n'])
            if page > 1:
                extend_(['                                ', u'    <a href="/topprinted?page=', escape_((page-1), True), u'">&laquo; prev&nbsp;&nbsp;</a>\n'])
                extend_(['                                ', u'\n'])
            if len(result) >= pagesize:
                extend_(['                                ', u'       <a href="/topprinted?page=', escape_((page+1), True), u'">&nbsp;&nbsp;next &raquo;</a>\n'])
            extend_(['                    ', u'        </td>\n'])
            extend_(['                    ', u'        <td class="pagination_pagesize">Pagesize: ', escape_(pagesize, True), u'</td>\n'])
            extend_(['                    ', u'    </tr>\n'])
            extend_(['                    ', u'</table>\n'])
    else:
        if len(result) == 0:
            extend_(['                    ', u'<p id="not_found">\n'])
            extend_(['                    ', u'    No questions found\n'])
            extend_(['                    ', u'</p>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

topprinted = CompiledTemplate(topprinted, './topprinted.html')
join_ = topprinted._join; escape_ = topprinted._escape

# coding: utf-8
def topvoted():
    __lineoffset__ = -5
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Top Voted - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery.autocomplete.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery.cookie.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery.autocomplete.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript">\n'])
    extend_([u'        jQuery(\n'])
    extend_([u'                function()\n'])
    extend_([u'                {   \n'])
    extend_([u'                    jQuery("#input_main").autocomplete(\'tags\', {\n'])
    extend_([u'                                multiple: true,\n'])
    extend_([u'                                matchContains: true,\n'])
    extend_([u"                                multipleSeparator:' ',\n"])
    extend_([u'                                extraParams: { service: jQuery("#service").val()}\n'])
    extend_([u'                        });\n'])
    extend_([u'                                \n'])
    extend_([u'                        jQuery("#input_main").focus();\n'])
    extend_([u'                        \n'])
    extend_([u"                jQuery('#input_main').bind('keyup blur',function(){ \n"])
    extend_([u'                    jQuery("#input_main").setOptions({\n'])
    extend_([u'                      extraParams: { service: jQuery("#service").val() }\n'])
    extend_([u'                    }).flushCache();  \n'])
    extend_([u'                  }\n'])
    extend_([u'                );\n'])
    extend_([u'                        \n'])
    extend_([u'                        if (jQuery.cookie("SERVICE_TOPVOTED") != null){\n'])
    extend_([u'                            jQuery("#service").val(jQuery.cookie("SERVICE_TOPVOTED"));\n'])
    extend_([u'                        }\n'])
    extend_([u'                        jQuery("#topvoted_button").click(function() {\n'])
    extend_([u'                            input = jQuery.trim(jQuery("#input_main").val())\n'])
    extend_([u'                    jQuery.cookie("SERVICE_TOPVOTED", jQuery("#service").val() , { expires: 50 })\n'])
    extend_([u'                        jQuery("#topvoted_form").submit();                                                \n'])
    extend_([u'                });\n'])
    extend_([u'                });\n'])
    extend_([u'        </script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'     <div id="main_container">\n'])
    extend_([u'          <div class="logo">                           \n'])
    extend_([u'            </div>\n'])
    extend_([u'          <div class="header links">\n'])
    extend_([u'              <a class="nolines" href="/">Home</a>|<a class="nolines" href="/myse">MySE</a>|<a class="nolines" href="/favorites">Favorites</a>|<span class="header_current"><Favorites>TopVoted</span>|<a class="nolines" href="/topprinted">TopPrinted</a>|<a class="nolines" href="/deleted">Deleted</a>|<a class="nolines" href="/about">About</a>\n'])
    extend_([u'          </div>\n'])
    extend_([u'          <br>\n'])
    extend_([u'          <form  id="topvoted_form" action="/topvoted" method="POST">\n'])
    extend_([u'              <div id="input_container_topvoted">\n'])
    extend_([u'                 <span class="main">Tags</span>\n'])
    extend_([u'                     <div id="input_wrapper">\n'])
    extend_([u'                         <input maxlength="60" name="tagged" value="" style="text-align:left" size="40" id="input_main">\n'])
    extend_([u'                     </div>\n'])
    extend_([u'                 <div>                                       \n'])
    extend_([u'                       <select id="service" name="service">\n'])
    for service_key in loop.setup(supported_services.keys):
        if supported_services.info.get(service_key):
            extend_(['                           ', u'<option  value="', escape_((service_key), True), u'">', escape_((supported_services.info[service_key]['name']), True), u'</option>\n'])
    extend_([u'                      </select>\n'])
    extend_([u'                  </div>\n'])
    extend_([u'                  <div class="button">\n'])
    extend_([u'                      <input type="image" id="topvoted_button" src="/images/getquestions.png" onmouseover="this.src=\'/images/getquestions_MouseOver.png\';" onmouseout="this.src=\'/images/getquestions.png\';" />\n'])
    extend_([u'                  </div>\n'])
    extend_([u'              </div>\n'])
    extend_([u'          </form>                          \n'])
    extend_([u'      </div>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

topvoted = CompiledTemplate(topvoted, './topvoted.html')
join_ = topvoted._join; escape_ = topvoted._escape

# coding: utf-8
def topvoted_tagged (tagged, result, service, pagination):
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'])
    extend_([u'<html>\n'])
    extend_([u'    <head>\n'])
    extend_([u'        <meta http-equiv="content-type" content="text/html; charset=UTF-8">\n'])
    extend_([u'        <meta name="description" content="StackPrinter - The Stack Exchange Printer Suite">\n'])
    extend_([u'        <meta name="keywords" content="printer friendly stackoverflow stackapps stack exchange">\n'])
    extend_([u'        <title>Top Voted - StackPrinter</title> \n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/search.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/main.css">\n'])
    extend_([u'        <link rel="stylesheet" href="/stylesheets/jquery-ui.css">\n'])
    extend_([u'        <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-1.4.2.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/jquery-ui.min.js"></script>\n'])
    extend_([u'        <script type="text/javascript" src="/javascripts/main.js"></script>\n'])
    extend_([u'  </head>\n'])
    extend_([u'    <body>\n'])
    extend_([u'        <div id="back">\n'])
    extend_([u'                <a href="/topvoted"><img src="/images/search.png"/></a>\n'])
    extend_([u'            </div>\n'])
    extend_([u'             <div id="title" class="main"><img src="', escape_((supported_services.info[service]['icon_url']), True), u'"/>', escape_((supported_services.info[service]['name']), True), u'&nbsp;<i>Top Voted</i> questions </div>\n'])
    extend_([u'             <p id="input">', escape_((tagged), True), u'</p>\n'])
    extend_([u'             \n'])
    extend_([u'             <table cellpadding="2" cellspacing="0">\n'])
    for question in loop.setup(result):
        extend_(['                    ', u'<tr class="', escape_(loop.parity, True), u'">\n'])
        extend_(['                    ', u'    <td class="printer">\n'])
        extend_(['                    ', u'        <a target="_blank" href="/export?question=', escape_((question.question_id), True), u'&format=HTML&service=', escape_((question.service), True), u'&linktohome=false"/>\n'])
        extend_(['                    ', u'            <img title="Printer-Friendly" src="images/printer_black.png"/>\n'])
        extend_(['                    ', u'        </a>                            \n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="quicklook">\n'])
        extend_(['                    ', u'        <a onclick="javascript:quicklook(', escape_((question.question_id), True), u",'", escape_((question.service), True), u'\');return false;" href="#"/>\n'])
        extend_(['                    ', u'            <img title="Quicklook" src="images/quicklook.png"/>\n'])
        extend_(['                    ', u'        </a>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="counters">\n'])
        extend_(['                    ', u'        [', escape_(question.get_votes(), True), u']<br>[', escape_(question.answer_count, True), u']\n'])
        extend_(['                    ', u'    </td>    \n'])
        extend_(['                    ', u'    <td class="title">\n'])
        extend_(['                    ', u'        <a target="_blank" href="', escape_(question.url, True), u'"/>', escape_(htmlquote(question.title), True), u'</a><br>\n'])
        extend_(['                    ', u'        <span class="tag">\n'])
        extend_(['                    ', u'            [', escape_((", ".join([tag for tag in question.tags_list])), True), u']\n'])
        extend_(['                    ', u'        </span>\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'    <td class="date">\n'])
        extend_(['                    ', u'            [', escape_((question.creation_date.strftime('%Y-%m-%d')), True), u']\n'])
        extend_(['                    ', u'    </td>\n'])
        extend_(['                    ', u'</tr>\n'])
        if loop.last:
            extend_(['                    ', u'</table>\n'])
            extend_(['                    ', u'<table id="pagination">\n'])
            extend_(['                    ', u'    <tr>\n'])
            extend_(['                    ', u'        <td class="pagination_found">Found: ', escape_(commify(pagination.total), True), u'</td>\n'])
            extend_(['                    ', u'        <td class="pagination_page">\n'])
            if pagination.has_previous_entries():
                extend_(['                                ', u'    <a href="/topvoted?service=', escape_((service), True), u'&tagged=', escape_((urlquote(tagged)), True), u'&page=', escape_((pagination.page-1), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">&laquo; prev&nbsp;&nbsp;</a>\n'])
            for page in loop.setup(pagination.get_pretty_pagination()):
                if page != -1:
                    extend_(['                                ', u'<a href="/topvoted?service=', escape_((service), True), u'&tagged=', escape_((urlquote(tagged)), True), u'&page=', escape_((page), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">\n'])
                    if page == pagination.page:
                        extend_(['                                    ', u'|', escape_((page), True), u'|    \n'])
                    else:
                        extend_(['                                    ', escape_(page, True), u' \n'])
                    extend_(['                                ', u'</a>\n'])
                else:
                    extend_(['                                ', escape_(pagination.separator, True), u'\n'])
            if pagination.has_more_entries():
                extend_(['                                ', u'       <a href="/topvoted?service=', escape_((service), True), u'&tagged=', escape_((urlquote(tagged)), True), u'&page=', escape_((pagination.page+1), True), u'&pagesize=', escape_((pagination.pagesize), True), u'">&nbsp;&nbsp;next &raquo;</a>\n'])
            extend_(['                    ', u'        </td>\n'])
            extend_(['                    ', u'        <td class="pagination_pagesize">Pagesize: ', escape_(pagination.pagesize, True), u'</td>\n'])
            extend_(['                    ', u'    </tr>\n'])
            extend_(['                    ', u'</table>\n'])
    else:
        if len(result) == 0:
            extend_(['                    ', u'<p id="not_found">\n'])
            extend_(['                    ', u'    No questions found\n'])
            extend_(['                    ', u'</p>\n'])
    extend_([u'  </body>\n'])
    extend_([u'</html>\n'])

    return self

topvoted_tagged = CompiledTemplate(topvoted_tagged, './topvoted_tagged.html')
join_ = topvoted_tagged._join; escape_ = topvoted_tagged._escape

